---
- name: WARNING
  ansible.builtin.debug:
    msg: |
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      This role is deprecated and will be removed in the future. Please use nova.core.secrets_to_vault
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

- name: Getting Authenticating token...
  ansible.builtin.uri:
    url: "{{ vault_address }}/v1/auth/ldap/login/{{ deployer_username }}"
    method: POST
    body:
      password: "{{ deployer_password }}"
    status_code: 200
    body_format: json
    validate_certs: "{{ validate_vault_certs }}"
  delegate_to: localhost
  become: false
  register: auth

- name: Checking if secrets path already exists...
  ansible.builtin.uri:
    url: "{{ vault_path }}"
    method: GET
    headers:
      X-Vault-Request: true
      X-Vault-Token: "{{ auth.json.auth.client_token }}"
    body_format: json
    validate_certs: "{{ validate_vault_certs }}"
    status_code:
      - 200
      - 404
  register: secrets_path
  delegate_to: localhost
  become: false

- name: Creating dummy secret to create the path... # So patch can be used afterwards you need a first secret for the path to be created...
  ansible.builtin.uri:
    url: "{{ vault_path }}"
    method: POST
    headers:
      X-Vault-Request: true
      X-Vault-Token: "{{ auth.json.auth.client_token }}"
    body:
      data:
        dummy: dummy
    body_format: json
    validate_certs: "{{ validate_vault_certs }}"
  delegate_to: localhost
  become: false
  when: secrets_path.status == 404

- name: Waiting until secrets path is created...
  ansible.builtin.uri:
    url: "{{ vault_path }}"
    method: GET
    headers:
      X-Vault-Request: true
      X-Vault-Token: "{{ auth.json.auth.client_token }}"
    body_format: json
    validate_certs: "{{ validate_vault_certs }}"
    status_code:
      - 200
  register: secrets_path_present
  delegate_to: localhost
  become: false
  until: secrets_path_present.status == 200
  retries: 60
  delay: 5
  when: secrets_path.status == 404

- name: Including task to add secrets...
  ansible.builtin.include_tasks: add_secrets.yml
  when: not autogenerated_secret
  loop: "{{ secrets }}"
  loop_control:
    loop_var: pregen_secret
    label: "{{ pregen_secret.key }}"

- name: Including task to add or overwrite secrets...
  ansible.builtin.include_tasks: add_autogenerated_secrets.yml
  when: autogenerated_secret
  loop: "{{ secrets }}"
  loop_control:
    loop_var: autogen_secret
    label: "{{ autogen_secret.key }}"

- name: Updating {{ vault_metadata_path }} metadata...
  ansible.builtin.uri:
    url: "{{ vault_metadata_path }}"
    method: POST
    headers:
      X-Vault-Request: true
      X-Vault-Token: "{{ auth.json.auth.client_token }}"
    body:
      max_versions: 100 # This sets the vault KV store secrets history to 100. Since using loops increments history quickly.
    body_format: json
    validate_certs: "{{ validate_vault_certs }}"
    status_code: 204
  delegate_to: localhost
  become: false
  when: secrets_path.status == 404
